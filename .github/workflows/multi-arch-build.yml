name: "Multi-arch docker build"

# Controls when the workflow will run
on:
  push:
    branches: ['main']
    tags:
      - 'v*.*.*'
  pull_request:
    branches: ['main']

env:
  TEST_TAG: ministryofjustice/dory-dnsmasq:test
  ALPINE_TAG: 3.19
  DNSMASQ_VERSION: 2.89-r6

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # First, checkout
      - name: Checkout
        uses: actions/checkout@v4.1.1

      # QEMU; multi-arch stuff
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      # get buildx - build multi-arch stuff
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.0.0

      # Access Docker Hub
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Setup test build for PRs
      - name: Test - build and export to Docker
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          build-args: |
            alpine_tag=${{ env.ALPINE_TAG }}
            dnsmasq_version=${{ env.DNSMASQ_VERSION }}

      # Gather meta for the builds
      - name: Docker meta
        if: github.event_name != 'pull_request'
        id: dory-dnsmasq-meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: ministryofjustice/dory-dnsmasq
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=true

      # perform the builds
      - name: Build and push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm/v8
            linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.dory-dnsmasq-meta.outputs.tags }}
          labels: ${{ steps.dory-dnsmasq-meta.outputs.labels }}
          build-args: |
            alpine_tag=${{ env.ALPINE_TAG }}
            dnsmasq_version=${{ env.DNSMASQ_VERSION }}